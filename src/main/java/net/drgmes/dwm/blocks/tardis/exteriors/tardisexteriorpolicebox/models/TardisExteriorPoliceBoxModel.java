package net.drgmes.dwm.blocks.tardis.exteriors.tardisexteriorpolicebox.models;

import net.drgmes.dwm.DWM;
import net.drgmes.dwm.blocks.tardis.exteriors.tardisexteriorpolicebox.TardisExteriorPoliceBoxBlock;
import net.drgmes.dwm.blocks.tardis.exteriors.tardisexteriorpolicebox.TardisExteriorPoliceBoxBlockEntity;
import net.fabricmc.api.EnvType;
import net.fabricmc.api.Environment;
import net.minecraft.client.model.*;
import net.minecraft.client.render.RenderLayer;
import net.minecraft.client.render.VertexConsumer;
import net.minecraft.client.render.entity.model.EntityModelLayer;
import net.minecraft.client.util.math.MatrixStack;

@Environment(EnvType.CLIENT)
public class TardisExteriorPoliceBoxModel extends Model {
    public static final EntityModelLayer LAYER_LOCATION = new EntityModelLayer(DWM.getIdentifier("textures/entity/tardis/exteriors/tardis_exterior_police_box.png"), "main");
    private final ModelPart base;
    private final ModelPart door_left;
    private final ModelPart door_right;

    public TardisExteriorPoliceBoxModel(ModelPart root) {
        super(RenderLayer::getEntityTranslucent);

        this.base = root.getChild("base");
        this.door_left = root.getChild("door_left");
        this.door_right = root.getChild("door_right");
    }

    @SuppressWarnings("unused")
    public static TexturedModelData getTexturedModelData() {
        ModelData modelData = new ModelData();
        ModelPartData modelPartData = modelData.getRoot();

        ModelPartData base = modelPartData.addChild("base", ModelPartBuilder.create().uv(0, 0).cuboid(-9.0F, -1.0F, -9.0F, 18.0F, 1.0F, 18.0F), ModelTransform.pivot(0.0F, 24.0F, 0.0F));
        ModelPartData platform_beams = base.addChild("platform_beams", ModelPartBuilder.create().uv(48, 76).cuboid(-8.0F, -27.0F, 6.0F, 2.0F, 26.0F, 2.0F).uv(40, 76).cuboid(6.0F, -27.0F, 6.0F, 2.0F, 26.0F, 2.0F).uv(22, 72).cuboid(-8.0F, -27.0F, -8.0F, 2.0F, 26.0F, 2.0F).uv(32, 62).cuboid(6.0F, -27.0F, -8.0F, 2.0F, 26.0F, 2.0F).uv(64, 84).cuboid(-7.3F, -27.5F, 6.3F, 1.0F, 26.0F, 1.0F).uv(60, 84).cuboid(-7.3F, -27.5F, -7.3F, 1.0F, 26.0F, 1.0F).uv(56, 84).cuboid(6.3F, -27.5F, -7.3F, 1.0F, 26.0F, 1.0F).uv(83, 83).cuboid(6.3F, -27.5F, 6.3F, 1.0F, 26.0F, 1.0F), ModelTransform.pivot(0.0F, 0.5F, 0.0F));
        ModelPartData labels = base.addChild("labels", ModelPartBuilder.create(), ModelTransform.pivot(0.0F, -1.0F, 0.0F));
        ModelPartData label_front = labels.addChild("label_front", ModelPartBuilder.create().uv(75, 19).cuboid(-7.0F, -25.0F, -8.4F, 14.0F, 2.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_front_corners_left = label_front.addChild("label_front_corners_left", ModelPartBuilder.create().uv(113, 107).cuboid(-7.0F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F).uv(112, 54).cuboid(-6.9F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_front_corners_right = label_front.addChild("label_front_corners_right", ModelPartBuilder.create().uv(112, 56).cuboid(7.0F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F).uv(34, 112).cuboid(6.9F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_front_corners_top = label_front.addChild("label_front_corners_top", ModelPartBuilder.create().uv(54, 82).cuboid(-7.0F, -25.0F, -8.6F, 14.0F, 0.0F, 2.0F).uv(82, 11).cuboid(-7.0F, -24.9F, -8.6F, 14.0F, 0.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_front_corners_bottom = label_front.addChild("label_front_corners_bottom", ModelPartBuilder.create().uv(82, 32).cuboid(-7.0F, -23.0001F, -8.6F, 14.0F, 0.0F, 2.0F).uv(79, 6).cuboid(-7.0F, -23.1F, -8.6F, 14.0F, 0.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_back = labels.addChild("label_back", ModelPartBuilder.create().uv(72, 15).cuboid(-7.0F, -25.0F, -8.4F, 14.0F, 2.0F, 2.0F), ModelTransform.of(0.0F, 0.0F, 0.0F, 0.0F, 3.1416F, 0.0F));
        ModelPartData label_back_corners_left = label_back.addChild("label_back_corners_left", ModelPartBuilder.create().uv(30, 112).cuboid(-7.0F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F).uv(16, 112).cuboid(-6.9F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_back_corners_right = label_back.addChild("label_back_corners_right", ModelPartBuilder.create().uv(12, 112).cuboid(7.0F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F).uv(112, 10).cuboid(6.9F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_back_corners_top = label_back.addChild("label_back_corners_top", ModelPartBuilder.create().uv(79, 4).cuboid(-7.0F, -25.0F, -8.6F, 14.0F, 0.0F, 2.0F).uv(79, 2).cuboid(-7.0F, -24.9F, -8.6F, 14.0F, 0.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_back_corners_bottom = label_back.addChild("label_back_corners_bottom", ModelPartBuilder.create().uv(79, 0).cuboid(-7.0F, -23.0001F, -8.6F, 14.0F, 0.0F, 2.0F).uv(74, 47).cuboid(-7.0F, -23.1F, -8.6F, 14.0F, 0.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_left = labels.addChild("label_left", ModelPartBuilder.create().uv(54, 33).cuboid(-7.0F, -25.0F, -8.4F, 14.0F, 2.0F, 2.0F), ModelTransform.of(0.0F, 0.0F, 0.0F, 0.0F, 1.5708F, 0.0F));
        ModelPartData label_left_corners_left = label_left.addChild("label_left_corners_left", ModelPartBuilder.create().uv(112, 8).cuboid(-7.0F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F).uv(8, 112).cuboid(-6.9F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_left_corners_right = label_left.addChild("label_left_corners_right", ModelPartBuilder.create().uv(108, 56).cuboid(7.0F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F).uv(108, 54).cuboid(6.9F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_left_corners_top = label_left.addChild("label_left_corners_top", ModelPartBuilder.create().uv(74, 45).cuboid(-7.0F, -25.0F, -8.6F, 14.0F, 0.0F, 2.0F).uv(74, 43).cuboid(-7.0F, -24.9F, -8.6F, 14.0F, 0.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_left_corners_bottom = label_left.addChild("label_left_corners_bottom", ModelPartBuilder.create().uv(74, 41).cuboid(-7.0F, -23.0001F, -8.6F, 14.0F, 0.0F, 2.0F).uv(74, 39).cuboid(-7.0F, -23.1F, -8.6F, 14.0F, 0.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_right = labels.addChild("label_right", ModelPartBuilder.create().uv(54, 11).cuboid(-7.0F, -25.0F, -8.4F, 14.0F, 2.0F, 2.0F), ModelTransform.of(0.0F, 0.0F, 0.0F, 0.0F, -1.5708F, 0.0F));
        ModelPartData label_right_corners_left = label_right.addChild("label_right_corners_left", ModelPartBuilder.create().uv(46, 74).cuboid(-7.0F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F).uv(26, 65).cuboid(-6.9F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_right_corners_right = label_right.addChild("label_right_corners_right", ModelPartBuilder.create().uv(49, 33).cuboid(7.0F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F).uv(9, 40).cuboid(6.9F, -25.0F, -8.6F, 0.0F, 2.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_right_corners_top = label_right.addChild("label_right_corners_top", ModelPartBuilder.create().uv(74, 37).cuboid(-7.0F, -25.0F, -8.6F, 14.0F, 0.0F, 2.0F).uv(73, 27).cuboid(-7.0F, -24.9F, -8.6F, 14.0F, 0.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData label_right_corners_bottom = label_right.addChild("label_right_corners_bottom", ModelPartBuilder.create().uv(73, 25).cuboid(-7.0F, -23.0001F, -8.6F, 14.0F, 0.0F, 2.0F).uv(73, 23).cuboid(-7.0F, -23.1F, -8.6F, 14.0F, 0.0F, 2.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData roof = base.addChild("roof", ModelPartBuilder.create().uv(0, 19).cuboid(-7.1F, -27.0F, -6.9F, 14.0F, 2.0F, 14.0F).uv(0, 35).cuboid(-6.6F, -27.2F, -6.4F, 13.0F, 2.0F, 13.0F).uv(40, 38).cuboid(-6.1F, -27.4F, -5.9F, 12.0F, 2.0F, 12.0F).uv(42, 19).cuboid(-5.6F, -27.6F, -5.4F, 11.0F, 2.0F, 11.0F).uv(0, 50).cuboid(-5.1F, -27.8F, -4.9F, 10.0F, 2.0F, 10.0F).uv(54, 0).cuboid(-4.6F, -28.0F, -4.4F, 9.0F, 2.0F, 9.0F).uv(0, 62).cuboid(-4.1F, -28.2F, -3.9F, 8.0F, 2.0F, 8.0F), ModelTransform.pivot(0.1F, -1.0F, -0.1F));
        ModelPartData lantern = roof.addChild("lantern", ModelPartBuilder.create().uv(39, 42).cuboid(-1.0F, -31.0F, -1.0F, 2.0F, 3.0F, 2.0F).uv(0, 42).cuboid(-1.5F, -28.3F, -1.5F, 3.0F, 1.0F, 3.0F), ModelTransform.pivot(-0.1F, 0.0F, 0.1F));
        ModelPartData lantern_plate_1 = lantern.addChild("lantern_plate_1", ModelPartBuilder.create().uv(0, 15).cuboid(-1.5F, -30.0F, -1.5F, 3.0F, 0.0F, 3.0F).uv(7, 12).cuboid(-1.5F, -30.1F, -1.5F, 3.0F, 0.0F, 3.0F), ModelTransform.pivot(0.0F, -0.8F, 0.0F));
        ModelPartData lantern_plate_2 = lantern.addChild("lantern_plate_2", ModelPartBuilder.create().uv(7, 9).cuboid(-1.5F, -30.0F, -1.5F, 3.0F, 0.0F, 3.0F).uv(7, 6).cuboid(-1.5F, -30.1F, -1.5F, 3.0F, 0.0F, 3.0F), ModelTransform.pivot(0.0F, -0.4F, 0.0F));
        ModelPartData lantern_plate_3 = lantern.addChild("lantern_plate_3", ModelPartBuilder.create().uv(7, 3).cuboid(-1.5F, -30.0F, -1.5F, 3.0F, 0.0F, 3.0F).uv(7, 0).cuboid(-1.5F, -30.1F, -1.5F, 3.0F, 0.0F, 3.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData walls = base.addChild("walls", ModelPartBuilder.create(), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_left = walls.addChild("wall_left", ModelPartBuilder.create().uv(66, 67).cuboid(-5.0F, -16.0F, -6.5F, 10.0F, 14.0F, 1.0F).uv(88, 49).cuboid(-1.0F, -24.0F, -7.1F, 2.0F, 23.0F, 1.0F).uv(24, 100).cuboid(-0.5F, -24.0F, -7.3F, 1.0F, 23.0F, 1.0F), ModelTransform.of(0.0F, 0.0F, 0.0F, 0.0F, 1.5708F, 0.0F));
        ModelPartData wall_left_windows = wall_left.addChild("wall_left_windows", ModelPartBuilder.create(), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_left_window_left = wall_left_windows.addChild("wall_left_window_left", ModelPartBuilder.create().uv(42, 19).cuboid(-5.0F, -23.2F, -6.4F, 4.0F, 6.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_left_window_left_borders = wall_left_window_left.addChild("wall_left_window_left_borders", ModelPartBuilder.create().uv(105, 109).cuboid(-5.8F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(80, 109).cuboid(-1.2F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(107, 21).cuboid(-5.2F, -23.8F, -6.5F, 4.0F, 1.0F, 1.0F).uv(105, 105).cuboid(-5.2F, -17.2F, -6.5F, 4.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_left_window_left_border_middle = wall_left_window_left_borders.addChild("wall_left_window_left_border_middle", ModelPartBuilder.create().uv(53, 6).cuboid(-5.2F, -1.0F, -6.5F, 4.0F, 0.0F, 1.0F).uv(53, 5).cuboid(-5.2F, -1.1F, -6.5F, 4.0F, 0.0F, 1.0F), ModelTransform.pivot(0.0F, -18.9F, 0.0F));
        ModelPartData wall_left_window_left_border_y_a = wall_left_window_left_borders.addChild("wall_left_window_left_border_y_a", ModelPartBuilder.create().uv(84, 109).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(28, 105).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(0.1F, -18.9F, 0.0F));
        ModelPartData wall_left_window_left_border_y_b = wall_left_window_left_borders.addChild("wall_left_window_left_border_y_b", ModelPartBuilder.create().uv(91, 104).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(80, 101).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(1.4F, -18.9F, 0.0F));
        ModelPartData wall_left_window_right = wall_left_windows.addChild("wall_left_window_right", ModelPartBuilder.create().uv(39, 35).cuboid(-5.0F, -23.2F, -6.4F, 4.0F, 6.0F, 1.0F), ModelTransform.pivot(6.0F, 0.0F, 0.0F));
        ModelPartData wall_left_window_right_borders = wall_left_window_right.addChild("wall_left_window_right_borders", ModelPartBuilder.create().uv(109, 0).cuboid(-5.8F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(87, 105).cuboid(-1.2F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(105, 93).cuboid(-5.2F, -23.8F, -6.5F, 4.0F, 1.0F, 1.0F).uv(105, 91).cuboid(-5.2F, -17.2F, -6.5F, 4.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_left_window_right_border_middle = wall_left_window_right_borders.addChild("wall_left_window_right_border_middle", ModelPartBuilder.create().uv(53, 4).cuboid(-5.2F, -1.0F, -6.5F, 4.0F, 0.0F, 1.0F).uv(49, 32).cuboid(-5.2F, -1.1F, -6.5F, 4.0F, 0.0F, 1.0F), ModelTransform.pivot(0.0F, -18.9F, 0.0F));
        ModelPartData wall_left_window_right_border_y_a = wall_left_window_right_borders.addChild("wall_left_window_right_border_y_a", ModelPartBuilder.create().uv(28, 99).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(80, 95).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(0.1F, -18.9F, 0.0F));
        ModelPartData wall_left_window_right_border_y_b = wall_left_window_right_borders.addChild("wall_left_window_right_border_y_b", ModelPartBuilder.create().uv(94, 60).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(94, 54).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(1.4F, -18.9F, 0.0F));
        ModelPartData wall_left_corners = wall_left.addChild("wall_left_corners", ModelPartBuilder.create().uv(86, 29).cuboid(-6.0F, -24.7F, -7.3F, 12.0F, 1.0F, 1.0F).uv(101, 73).cuboid(-6.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F).uv(100, 49).cuboid(5.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F).uv(0, 87).cuboid(-6.7F, -27.0F, -7.3F, 1.0F, 26.0F, 1.0F).uv(76, 84).cuboid(5.7F, -27.0F, -7.3F, 1.0F, 26.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_left_separators = wall_left.addChild("wall_left_separators", ModelPartBuilder.create().uv(105, 79).cuboid(-5.0F, -2.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(105, 77).cuboid(-5.0F, -7.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(105, 75).cuboid(-5.0F, -12.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(105, 19).cuboid(-5.0F, -17.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(104, 96).cuboid(-5.0F, -24.0F, -7.0F, 10.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_right = walls.addChild("wall_right", ModelPartBuilder.create().uv(66, 52).cuboid(-5.0F, -16.0F, -6.5F, 10.0F, 14.0F, 1.0F).uv(87, 81).cuboid(-1.0F, -24.0F, -7.1F, 2.0F, 23.0F, 1.0F).uv(97, 73).cuboid(-0.5F, -24.0F, -7.3F, 1.0F, 23.0F, 1.0F), ModelTransform.of(0.0F, 0.0F, 0.0F, 0.0F, -1.5708F, 0.0F));
        ModelPartData wall_right_windows = wall_right.addChild("wall_right_windows", ModelPartBuilder.create(), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_right_window_left = wall_right_windows.addChild("wall_right_window_left", ModelPartBuilder.create().uv(0, 35).cuboid(-5.0F, -23.2F, -6.4F, 4.0F, 6.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_right_window_left_borders = wall_right_window_left.addChild("wall_right_window_left_borders", ModelPartBuilder.create().uv(88, 73).cuboid(-5.8F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(4, 62).cuboid(-1.2F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(56, 80).cuboid(-5.2F, -23.8F, -6.5F, 4.0F, 1.0F, 1.0F).uv(56, 78).cuboid(-5.2F, -17.2F, -6.5F, 4.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_right_window_left_border_middle = wall_right_window_left_borders.addChild("wall_right_window_left_border_middle", ModelPartBuilder.create().uv(48, 37).cuboid(-5.2F, -1.0F, -6.5F, 4.0F, 0.0F, 1.0F).uv(38, 47).cuboid(-5.2F, -1.1F, -6.5F, 4.0F, 0.0F, 1.0F), ModelTransform.pivot(0.0F, -18.9F, 0.0F));
        ModelPartData wall_right_window_left_border_y_a = wall_right_window_left_borders.addChild("wall_right_window_left_border_y_a", ModelPartBuilder.create().uv(94, 48).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(20, 92).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(0.1F, -18.9F, 0.0F));
        ModelPartData wall_right_window_left_border_y_b = wall_right_window_left_borders.addChild("wall_right_window_left_border_y_b", ModelPartBuilder.create().uv(80, 89).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(20, 86).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(1.4F, -18.9F, 0.0F));
        ModelPartData wall_right_window_right = wall_right_windows.addChild("wall_right_window_right", ModelPartBuilder.create().uv(0, 26).cuboid(-5.0F, -23.2F, -6.4F, 4.0F, 6.0F, 1.0F), ModelTransform.pivot(6.0F, 0.0F, 0.0F));
        ModelPartData wall_right_window_right_borders = wall_right_window_right.addChild("wall_right_window_right_borders", ModelPartBuilder.create().uv(0, 62).cuboid(-5.8F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(48, 41).cuboid(-1.2F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(54, 76).cuboid(-5.2F, -23.8F, -6.5F, 4.0F, 1.0F, 1.0F).uv(64, 15).cuboid(-5.2F, -17.2F, -6.5F, 4.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_right_window_right_border_middle = wall_right_window_right_borders.addChild("wall_right_window_right_border_middle", ModelPartBuilder.create().uv(41, 32).cuboid(-5.2F, -1.0F, -6.5F, 4.0F, 0.0F, 1.0F).uv(8, 17).cuboid(-5.2F, -1.1F, -6.5F, 4.0F, 0.0F, 1.0F), ModelTransform.pivot(0.0F, -18.9F, 0.0F));
        ModelPartData wall_right_window_right_border_y_a = wall_right_window_right_borders.addChild("wall_right_window_right_border_y_a", ModelPartBuilder.create().uv(80, 83).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(30, 83).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(0.1F, -18.9F, 0.0F));
        ModelPartData wall_right_window_right_border_y_b = wall_right_window_right_borders.addChild("wall_right_window_right_border_y_b", ModelPartBuilder.create().uv(30, 77).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(30, 71).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(1.4F, -18.9F, 0.0F));
        ModelPartData wall_right_corners = wall_right.addChild("wall_right_corners", ModelPartBuilder.create().uv(86, 13).cuboid(-6.0F, -24.7F, -7.3F, 12.0F, 1.0F, 1.0F).uv(20, 100).cuboid(-6.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F).uv(97, 97).cuboid(5.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F).uv(72, 84).cuboid(-6.7F, -27.0F, -7.3F, 1.0F, 26.0F, 1.0F).uv(68, 84).cuboid(5.7F, -27.0F, -7.3F, 1.0F, 26.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_right_separators = wall_right.addChild("wall_right_separators", ModelPartBuilder.create().uv(104, 17).cuboid(-5.0F, -2.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(103, 27).cuboid(-5.0F, -7.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(103, 25).cuboid(-5.0F, -12.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(103, 23).cuboid(-5.0F, -17.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(102, 15).cuboid(-5.0F, -24.0F, -7.0F, 10.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_back = walls.addChild("wall_back", ModelPartBuilder.create().uv(0, 72).cuboid(-5.0F, -16.0F, -6.5F, 10.0F, 14.0F, 1.0F).uv(30, 90).cuboid(-1.0F, -24.0F, -7.1F, 2.0F, 23.0F, 1.0F).uv(101, 97).cuboid(-0.5F, -24.0F, -7.3F, 1.0F, 23.0F, 1.0F), ModelTransform.of(0.0F, 0.0F, 0.0F, 0.0F, 3.1416F, 0.0F));
        ModelPartData wall_back_windows = wall_back.addChild("wall_back_windows", ModelPartBuilder.create(), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_back_window_left = wall_back_windows.addChild("wall_back_window_left", ModelPartBuilder.create().uv(30, 50).cuboid(-5.0F, -23.2F, -6.4F, 4.0F, 6.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_back_window_left_borders = wall_back_window_left.addChild("wall_back_window_left_borders", ModelPartBuilder.create().uv(64, 111).cuboid(-5.8F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(60, 111).cuboid(-1.2F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(108, 40).cuboid(-5.2F, -23.8F, -6.5F, 4.0F, 1.0F, 1.0F).uv(108, 38).cuboid(-5.2F, -17.2F, -6.5F, 4.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_back_window_left_border_middle = wall_back_window_left_borders.addChild("wall_back_window_left_border_middle", ModelPartBuilder.create().uv(56, 37).cuboid(-5.2F, -1.0F, -6.5F, 4.0F, 0.0F, 1.0F).uv(53, 17).cuboid(-5.2F, -1.1F, -6.5F, 4.0F, 0.0F, 1.0F), ModelTransform.pivot(0.0F, -18.9F, 0.0F));
        ModelPartData wall_back_window_left_border_y_a = wall_back_window_left_borders.addChild("wall_back_window_left_border_y_a", ModelPartBuilder.create().uv(0, 113).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(112, 28).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(0.1F, -18.9F, 0.0F));
        ModelPartData wall_back_window_left_border_y_b = wall_back_window_left_borders.addChild("wall_back_window_left_border_y_b", ModelPartBuilder.create().uv(88, 111).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(86, 111).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(1.4F, -18.9F, 0.0F));
        ModelPartData wall_back_window_right = wall_back_windows.addChild("wall_back_window_right", ModelPartBuilder.create().uv(0, 50).cuboid(-5.0F, -23.2F, -6.4F, 4.0F, 6.0F, 1.0F), ModelTransform.pivot(6.0F, 0.0F, 0.0F));
        ModelPartData wall_back_window_right_borders = wall_back_window_right.addChild("wall_back_window_right_borders", ModelPartBuilder.create().uv(56, 111).cuboid(-5.8F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(109, 109).cuboid(-1.2F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(108, 36).cuboid(-5.2F, -23.8F, -6.5F, 4.0F, 1.0F, 1.0F).uv(105, 107).cuboid(-5.2F, -17.2F, -6.5F, 4.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_back_window_right_border_middle = wall_back_window_right_borders.addChild("wall_back_window_right_border_middle", ModelPartBuilder.create().uv(53, 8).cuboid(-5.2F, -1.0F, -6.5F, 4.0F, 0.0F, 1.0F).uv(53, 7).cuboid(-5.2F, -1.1F, -6.5F, 4.0F, 0.0F, 1.0F), ModelTransform.pivot(0.0F, -18.9F, 0.0F));
        ModelPartData wall_back_window_right_border_y_a = wall_back_window_right_borders.addChild("wall_back_window_right_border_y_a", ModelPartBuilder.create().uv(28, 111).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(91, 110).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(0.1F, -18.9F, 0.0F));
        ModelPartData wall_back_window_right_border_y_b = wall_back_window_right_borders.addChild("wall_back_window_right_border_y_b", ModelPartBuilder.create().uv(78, 110).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(76, 110).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(1.4F, -18.9F, 0.0F));
        ModelPartData wall_back_corners = wall_back.addChild("wall_back_corners", ModelPartBuilder.create().uv(86, 34).cuboid(-6.0F, -24.7F, -7.3F, 12.0F, 1.0F, 1.0F).uv(40, 104).cuboid(-6.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F).uv(104, 36).cuboid(5.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F).uv(8, 87).cuboid(-6.7F, -27.0F, -7.3F, 1.0F, 26.0F, 1.0F).uv(4, 87).cuboid(5.7F, -27.0F, -7.3F, 1.0F, 26.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData wall_back_separators = wall_back.addChild("wall_back_separators", ModelPartBuilder.create().uv(105, 89).cuboid(-5.0F, -2.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(105, 87).cuboid(-5.0F, -7.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(105, 85).cuboid(-5.0F, -12.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(105, 83).cuboid(-5.0F, -17.0F, -7.0F, 10.0F, 1.0F, 1.0F).uv(105, 81).cuboid(-5.0F, -24.0F, -7.0F, 10.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData door_corners = base.addChild("door_corners", ModelPartBuilder.create().uv(16, 87).cuboid(-6.7F, -27.0F, -7.3F, 1.0F, 26.0F, 1.0F).uv(12, 87).cuboid(5.7F, -27.0F, -7.3F, 1.0F, 26.0F, 1.0F).uv(90, 8).cuboid(-6.0F, -24.7F, -7.3F, 12.0F, 1.0F, 1.0F).uv(48, 104).cuboid(5.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData door_left = modelPartData.addChild("door_left", ModelPartBuilder.create().uv(44, 104).cuboid(5.05F, -11.625F, -0.9F, 1.0F, 23.0F, 1.0F).uv(105, 60).cuboid(0.55F, -3.625F, -0.1F, 4.0F, 14.0F, 1.0F).uv(54, 0).cuboid(1.05F, -3.125F, -0.2F, 3.0F, 3.0F, 1.0F).uv(113, 34).cuboid(4.85F, -2.125F, -0.8F, 1.0F, 1.0F, 1.0F), ModelTransform.pivot(-5.55F, 11.625F, -6.4F));
        ModelPartData door_left_separators = door_left.addChild("door_left_separators", ModelPartBuilder.create().uv(108, 54).cuboid(-5.0F, -2.0F, -7.0F, 4.0F, 1.0F, 1.0F).uv(108, 52).cuboid(-5.0F, -7.0F, -7.0F, 4.0F, 1.0F, 1.0F).uv(108, 50).cuboid(-5.0F, -12.0F, -7.0F, 4.0F, 1.0F, 1.0F).uv(108, 48).cuboid(-5.0F, -17.0F, -7.0F, 4.0F, 1.0F, 1.0F).uv(108, 46).cuboid(-5.0F, -24.0F, -7.0F, 4.0F, 1.0F, 1.0F), ModelTransform.pivot(5.55F, 12.375F, 6.4F));
        ModelPartData door_left_corners = door_left.addChild("door_left_corners", ModelPartBuilder.create().uv(52, 104).cuboid(-6.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F).uv(93, 96).cuboid(-1.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F), ModelTransform.pivot(5.55F, 12.375F, 6.4F));
        ModelPartData door_left_window = door_left.addChild("door_left_window", ModelPartBuilder.create().uv(105, 98).cuboid(-5.0F, -23.2F, -6.4F, 4.0F, 6.0F, 1.0F), ModelTransform.pivot(5.55F, 12.375F, 6.4F));
        ModelPartData door_left_window_borders = door_left_window.addChild("door_left_window_borders", ModelPartBuilder.create().uv(72, 111).cuboid(-5.8F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(68, 111).cuboid(-1.2F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(108, 44).cuboid(-5.2F, -23.8F, -6.5F, 4.0F, 1.0F, 1.0F).uv(108, 42).cuboid(-5.2F, -17.2F, -6.5F, 4.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData door_left_window_border_middle = door_left_window_borders.addChild("door_left_window_border_middle", ModelPartBuilder.create().uv(0, 59).cuboid(-5.2F, -1.0F, -6.5F, 4.0F, 0.0F, 1.0F).uv(57, 32).cuboid(-5.2F, -1.1F, -6.5F, 4.0F, 0.0F, 1.0F), ModelTransform.pivot(0.0F, -18.9F, 0.0F));
        ModelPartData door_left_window_border_y_a = door_left_window_borders.addChild("door_left_window_border_y_a", ModelPartBuilder.create().uv(6, 113).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(4, 113).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(0.1F, -18.9F, 0.0F));
        ModelPartData door_left_window_border_y_b = door_left_window_borders.addChild("door_left_window_border_y_b", ModelPartBuilder.create().uv(113, 0).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(2, 113).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(1.4F, -18.9F, 0.0F));
        ModelPartData door_right = modelPartData.addChild("door_right", ModelPartBuilder.create().uv(36, 90).cuboid(-6.05F, -11.625F, -0.9F, 1.0F, 23.0F, 1.0F).uv(0, 0).cuboid(-4.55F, -3.625F, -0.1F, 4.0F, 14.0F, 1.0F).uv(26, 64).cuboid(-3.55F, -2.625F, -0.11F, 2.0F, 2.0F, 1.0F).uv(113, 111).cuboid(-5.85F, -2.625F, -0.8F, 1.0F, 2.0F, 1.0F), ModelTransform.pivot(5.55F, 11.625F, -6.4F));
        ModelPartData door_right_separators = door_right.addChild("door_right_separators", ModelPartBuilder.create().uv(24, 62).cuboid(-5.0F, -2.0F, -7.0F, 4.0F, 1.0F, 1.0F).uv(30, 57).cuboid(-5.0F, -7.0F, -7.0F, 4.0F, 1.0F, 1.0F).uv(0, 57).cuboid(-5.0F, -12.0F, -7.0F, 4.0F, 1.0F, 1.0F).uv(54, 15).cuboid(-5.0F, -17.0F, -7.0F, 4.0F, 1.0F, 1.0F).uv(0, 46).cuboid(-5.0F, -24.0F, -7.0F, 4.0F, 1.0F, 1.0F), ModelTransform.pivot(0.45F, 12.375F, 6.4F));
        ModelPartData door_right_corners = door_right.addChild("door_right_corners", ModelPartBuilder.create().uv(96, 49).cuboid(-6.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F).uv(93, 72).cuboid(-1.0F, -24.0F, -7.0F, 1.0F, 23.0F, 1.0F), ModelTransform.pivot(0.45F, 12.375F, 6.4F));
        ModelPartData door_right_window = door_right.addChild("door_right_window", ModelPartBuilder.create().uv(0, 19).cuboid(-5.0F, -23.2F, -6.4F, 4.0F, 6.0F, 1.0F), ModelTransform.pivot(0.45F, 12.375F, 6.4F));
        ModelPartData door_right_window_borders = door_right_window.addChild("door_right_window_borders", ModelPartBuilder.create().uv(10, 26).cuboid(-5.8F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(10, 19).cuboid(-1.2F, -23.0F, -6.5F, 1.0F, 6.0F, 1.0F).uv(42, 28).cuboid(-5.2F, -23.8F, -6.5F, 4.0F, 1.0F, 1.0F).uv(42, 26).cuboid(-5.2F, -17.2F, -6.5F, 4.0F, 1.0F, 1.0F), ModelTransform.pivot(0.0F, 0.0F, 0.0F));
        ModelPartData door_right_window_border_middle = door_right_window_borders.addChild("door_right_window_border_middle", ModelPartBuilder.create().uv(8, 16).cuboid(-5.2F, -1.0F, -6.5F, 4.0F, 0.0F, 1.0F).uv(8, 15).cuboid(-5.2F, -1.1F, -6.5F, 4.0F, 0.0F, 1.0F), ModelTransform.pivot(0.0F, -18.9F, 0.0F));
        ModelPartData door_right_window_border_y_a = door_right_window_borders.addChild("door_right_window_border_y_a", ModelPartBuilder.create().uv(24, 63).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(10, 34).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(0.1F, -18.9F, 0.0F));
        ModelPartData door_right_window_border_y_b = door_right_window_borders.addChild("door_right_window_border_y_b", ModelPartBuilder.create().uv(16, 6).cuboid(-3.7F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F).uv(16, 0).cuboid(-3.8F, -4.1F, -6.5F, 0.0F, 6.0F, 1.0F), ModelTransform.pivot(1.4F, -18.9F, 0.0F));

        return TexturedModelData.of(modelData, 128, 128);
    }

    @Override
    public void render(MatrixStack matrixStack, VertexConsumer vertexConsumer, int light, int overlay, float red, float green, float blue, float alpha) {
        base.render(matrixStack, vertexConsumer, light, overlay, red, green, blue, alpha);
        door_left.render(matrixStack, vertexConsumer, light, overlay, red, green, blue, alpha);
        door_right.render(matrixStack, vertexConsumer, light, overlay, red, green, blue, alpha);
    }

    public void setupAnim(TardisExteriorPoliceBoxBlockEntity tile) {
        float doorAngle = 1.46F;

        if (tile.getCachedState().get(TardisExteriorPoliceBoxBlock.OPEN)) {
            this.door_left.yaw = -doorAngle;
            this.door_right.yaw = doorAngle;
        }
    }
}
