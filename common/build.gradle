architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/dwm.accesswidener")
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    if (rootProject.hasProperty("forge_config_api_port_version")) {
        modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${rootProject.forge_config_api_port_version}"
    }

    if (rootProject.hasProperty("dim_lib_version")) {
        modCompileOnlyApi("com.github.iPortalTeam:DimLib:v${rootProject.dim_lib_version}-mc${rootProject.minecraft_version}") { transitive(false) }
    }

    if (rootProject.hasProperty("imm_ptl_version")) {
        modCompileOnlyApi("com.github.iPortalTeam:ImmersivePortalsMod:v${rootProject.imm_ptl_version}-mc${rootProject.minecraft_version}") { transitive false }
    }

    if (rootProject.hasProperty("cloth_config_version")) {
        modCompileOnlyApi("me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config_version}") { transitive(false) }
    }

    if (rootProject.hasProperty("mod_menu_version")) {
        modCompileOnlyApi("com.terraformersmc:modmenu:${rootProject.mod_menu_version}") { transitive(false) }
    }

    if (rootProject.hasProperty("teamreborn_energy_api_version")) {
        modCompileOnlyApi("teamreborn:energy:${rootProject.teamreborn_energy_api_version}") { transitive false }
    }

    if (rootProject.hasProperty("ae2_api_version")) {
        modCompileOnlyApi("appeng:appliedenergistics2-forge:${rootProject.ae2_api_version}:api") { transitive false }
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.mod_id
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

sourceSets.main.resources {
    srcDir 'src/main/generated'
}
